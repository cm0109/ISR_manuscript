t = 1000 # permutation times
sub_n = nrow(otu_table)/2 #'sub_n' is the sample size of off-diagnonal subsample,
# let it be the same as diagonal entries (=48)
# input table,
# note: the data of paired mom and child, should be adjacent in the table,
# mom or child always comes first, e.g M1,C1,M2,C2...
mc_data <- otu_table
#check pairing
if(nrow(mc_data)%%2==1){stop('Error: number of subject is odd.')}
n_pair <- nrow(mc_data)/2 # number of pairs
#compute full B-C dissimilarity matrix
dist_full_matrix <- vegdist(mc_data, method = meth) %>% as.matrix()
# dist btw mom and child
D <- dist_full_matrix[(1:n_pair)*2,((1:n_pair)*2-1)]
# observed test statistic
median_diff_obs <- median(D[row(D)>col(D)]) - median(diag(D))
# permuation
stat_perm <- rep(0,t)
for(i in 1:t){
D_perm <- D[,sample(n_pair)] # permute childrens
# compute statistics from permutation (only use sub_n off-diag entries for lower power)
stat_perm[i] <- median(sample(D_perm[row(D_perm)>col(D_perm)],sub_n)) - median(diag(D_perm))
}
#compute p.value
stat_perm_mean <- mean(stat_perm)
# p.value is proportion of observed test stat. more extreme than
# the permutated test statistics, which form the null distribution
p.value_diff <- mean((stat_perm-stat_perm_mean)^2>(median_diff_obs-stat_perm_mean)^2)
# Convert to star
perm_pval_star <- stars.pval(p.value_diff)[1]
# Set label as "ns" when not significant
if (perm_pval_star == "." | perm_pval_star == " "){
perm_pval_star = "ns"
}
# Output
list(
pval = p.value_diff,
pval_star = perm_pval_star
)
}
# Converting Wilcox test p values to star symbols
wilcox_pval_star <- function(value, grp){
# Load required library
library(gtools) # for stars pval function
# Set seed
set.seed(12345)
# Wilcox test
w_pval <- wilcox.test(value ~ grp, exact=F)$p.value
# Convert to star
w_pval_star <- stars.pval(w_pval)[1]
# Set label as "ns" when not significant
if ( w_pval_star == "." |  w_pval_star == " "){
w_pval_star = "ns"
}
# Output
list(
pval = w_pval,
pval_star = w_pval_star
)
}
# Function for calculating distance for individual species
species_dist_calc_sal <- function(otu_name){
# For mother-child comparisons
# Subset for genus
species_counts_mch <- ISR_sal_matched_mch[,colnames(ISR_sal_matched_mch) %in% row.names(ISR_blast_matches_sal[ISR_blast_matches_sal$otu1==otu_name,])]
# For presence/absence
# Add "other" column
species_counts_mch$other <- rowSums(ISR_sal_matched_mch) - rowSums(species_counts_mch)
# Rarefy
set.seed(12345); species_counts_mch_rar <- as.data.frame(rrarefy(species_counts_mch, min(rowSums(species_counts_mch))))
# Remove other column
species_counts_mch_rar$other <- NULL
species_counts_mch$other <- NULL
# Presence/Absence
species_prabs <- data.frame((species_counts_mch_rar > 0)*1)
# Calculate dist for sf plots
species_prab_sfd <- AD.melt.dist.sf(species_prabs, ISR_sal_meta_mch)$dmsf
species_prab_sfd$otu <- otu_name
return(species_prab_sfd)
}
ISR_seqtab_atab_comb_filtp_clean <- read.table(file="Input_files/ISR_seqtab_atab_comb_filtp_clean.txt", sep="\t", header = T)
dim(ISR_seqtab_atab_comb_filtp_clean) # 778 4067
# Rarefying raw counts for converting to presence/absence
# Rarefy counts
set.seed(12345); ISR_seqtab_atab_comb_filtp_clean_rar <- as.data.frame(rrarefy(ISR_seqtab_atab_comb_filtp_clean, min(rowSums(ISR_seqtab_atab_comb_filtp_clean))))
# Convert Rarified counts to Pr/Ab:
ISR_seqtab_atab_comb_filtp_clean_prab <- data.frame((ISR_seqtab_atab_comb_filtp_clean_rar > 0)*1)
# All ISR Samples clinical metadata (See AD_clinical_metadata_processing.R)
AD_clinical_meta_2019_ISR <- read.table(file="Input_files/AD_clinical_meta_2019_ISR.txt", sep="\t", header = T)
dim(AD_clinical_meta_2019_ISR) # 265  24
# Mother-Child ISR Samples clinical metadata (age matched)
AD_clinical_meta_2019_ISR_mch <- read.table(file="Input_files/AD_clinical_meta_2019_ISR_mch.txt", sep="\t", header = T)
dim(AD_clinical_meta_2019_ISR_mch) # 210  24
# Create table for all ISR samples sequenced
all_site_samples <- data.frame(row.names(ISR_seqtab_atab_comb_filtp_clean))
colnames(all_site_samples) <- "samples"
all_site_samples$sample <- all_site_samples$samples
all_site_samples$sample <- gsub("_P1_ISR", "", all_site_samples$sample)
all_site_samples$sample <- gsub("_P2_ISR", "", all_site_samples$sample)
all_site_samples$sample <- gsub("_S_ISR", "", all_site_samples$sample)
# Add subject info
all_site_samples$type <- AD_clinical_meta_2019_ISR$type[match(all_site_samples$sample, AD_clinical_meta_2019_ISR$sample)]
# Add site info
all_site_samples$site <- as.character(all_site_samples$samples)
all_site_samples$site[grepl("P1", all_site_samples$site)] <- "Supragingival Plaque"
all_site_samples$site[grepl("P2", all_site_samples$site)] <- "Subgingival Plaque"
all_site_samples$site[grepl("_S", all_site_samples$site)] <- "Soft Tissue/Saliva Swab"
# Subset for mother-child only
all_site_samples_mch <- all_site_samples[all_site_samples$type == "Mother" | all_site_samples$type == "Child", ]
nrow(all_site_samples_mch) # 710
# Subset counts
ISR_all_sites_mch_counts <- ISR_seqtab_atab_comb_filtp_clean[row.names(ISR_seqtab_atab_comb_filtp_clean) %in% all_site_samples_mch$samples, ]
ISR_all_sites_mch_counts <- ISR_all_sites_mch_counts[,colSums(ISR_all_sites_mch_counts) > 0]
dim(ISR_all_sites_mch_counts) # 710 3949
# Rarefy counts
set.seed(12345); ISR_all_sites_mch_counts_rar <- as.data.frame(rrarefy(ISR_all_sites_mch_counts, min(rowSums(ISR_all_sites_mch_counts))))
# Convert Rarified counts to Pr/Ab:
ISR_all_sites_mch_counts_prab <- data.frame((ISR_all_sites_mch_counts_rar > 0)*1)
# Compute NMDS
set.seed(12345); ISR_all_sites_mch_counts_prab.mds <- metaMDS(ISR_all_sites_mch_counts_prab, trymax = 200, autotransform = F, wascores = F)
# Making dataframe for plotting
ISR_all_sites_mch_counts_prab.mds.df <- data.frame(scores(ISR_all_sites_mch_counts_prab.mds, display = 'sites'))
# Add subject type info
ISR_all_sites_mch_counts_prab.mds.df$type <- all_site_samples$type[match(row.names(ISR_all_sites_mch_counts_prab.mds.df), all_site_samples$samples)]
ISR_all_sites_mch_counts_prab.mds.df$site <- all_site_samples$site[match(row.names(ISR_all_sites_mch_counts_prab.mds.df), all_site_samples$samples)]
# View(ISR_all_sites_mch_counts_prab.mds.df)
# Permanova
set.seed(12345); (ISR_all_sites_mch_mds_df.mch.perm <- adonis(formula = ISR_all_sites_mch_counts_prab ~ ISR_all_sites_mch_counts_prab.mds.df$type, strata =  ISR_all_sites_mch_counts_prab.mds.df$site))
# 0.001 ***
set.seed(12345); (ISR_all_sites_mch_mds_df.site.perm <- adonis(formula = ISR_all_sites_mch_counts_prab ~ ISR_all_sites_mch_counts_prab.mds.df$site, strata =  ISR_all_sites_mch_counts_prab.mds.df$type))
# 0.001 ***
# Plot NMDS
ggplot(ISR_all_sites_mch_counts_prab.mds.df, aes(x=NMDS1, y=NMDS2)) +
stat_ellipse(aes(color=site), show.legend = F, lwd=0.2) + scale_color_manual(values=c("slateblue", "firebrick2", "forestgreen")) +
geom_point(alpha=0.75, color="black", pch=21, stroke = 0.2, aes(fill=site,  size=type)) + scale_fill_manual(values=c("darkblue", "firebrick4", "forestgreen")) +
labs(fill="Site", size="Subject Type") + scale_size_manual(values=c(1,3)) + theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "cm"), plot.title = element_text(size=15, face="bold", hjust=0.5), plot.subtitle = element_text(color="firebrick4", size=10, hjust=0.5),
axis.text = element_text(size=8, face="bold", color="black"), axis.title = element_text(size=10, face="bold"),  axis.line = element_line(size = 0.2),
legend.title = element_text(size=10, face="bold", hjust=0.5), legend.text = element_text(size = 10), legend.key.size = unit(0.6,"cm"), legend.position="right")
#ggsave(file="output/NMDS ISR sites prabs mch.pdf", width = 10, height = 6, units = "in")
# Plot NMDS
ggplot(ISR_all_sites_mch_counts_prab.mds.df, aes(x=NMDS1, y=NMDS2)) +
stat_ellipse(aes(color=site), show.legend = F, lwd=0.2) + scale_color_manual(values=c("slateblue", "firebrick2", "forestgreen")) +
geom_point(alpha=0.75, color="black", pch=21, stroke = 0.01, aes(fill=site,  size=type)) + scale_fill_manual(values=c("darkblue", "firebrick4", "forestgreen")) +
labs(fill="Site", size="Subject Type") + scale_size_manual(values=c(2,5)) + theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "cm"), plot.title = element_text(size=15, face="bold", hjust=0.5), plot.subtitle = element_text(color="firebrick4", size=10, hjust=0.5),
axis.text = element_text(size=8, face="bold", color="black"), axis.title = element_text(size=10, face="bold"),  axis.line = element_line(size = 0.2),
legend.title = element_text(size=10, face="bold", hjust=0.5), legend.text = element_text(size = 10), legend.key.size = unit(0.6,"cm"), legend.position="right")
ggsave(file="output/NMDS ISR sites prabs mch.pdf", width = 10, height = 6, units = "in")
AD_core_counts <- read.table(file="Input_files/AD_core_counts.txt", sep="\t", header = T)
dim(AD_core_counts) # 709 x 581
# Create table for all core samples sequenced
all_site_samples_core <- data.frame(row.names(AD_core_counts))
colnames(all_site_samples_core) <- "samples"
all_site_samples_core$sample <- all_site_samples_core$samples
all_site_samples_core$sample <- gsub("_P1", "", all_site_samples_core$sample)
all_site_samples_core$sample <- gsub("_P2", "", all_site_samples_core$sample)
all_site_samples_core$sample <- gsub("_S", "", all_site_samples_core$sample)
# Add subject info
all_site_samples_core$type <- AD_clinical_meta_2019_ISR$type[match(all_site_samples_core$sample, AD_clinical_meta_2019_ISR$sample)]
# Add site info
all_site_samples_core$site <- as.character(all_site_samples_core$samples)
all_site_samples_core$site[grepl("P1", all_site_samples_core$site)] <- "Supragingival Plaque"
all_site_samples_core$site[grepl("P2", all_site_samples_core$site)] <- "Subgingival Plaque"
all_site_samples_core$site[grepl("_S", all_site_samples_core$site)] <- "Soft Tissue/Saliva Swab"
# Subset for mother and child only
all_site_samples_core_mch <- all_site_samples_core[all_site_samples_core$type == "Mother" | all_site_samples_core$type == "Child", ]
nrow(all_site_samples_core_mch) # 645
# Subset counts
core_all_sites_mch_counts <- AD_core_counts[row.names(AD_core_counts) %in% all_site_samples_core_mch$samples, ]
core_all_sites_mch_counts <- core_all_sites_mch_counts[,colSums(core_all_sites_mch_counts) > 0]
dim(core_all_sites_mch_counts) # 645 580
# Rarefy counts
set.seed(12345); core_all_sites_mch_counts_rar <- as.data.frame(rrarefy(core_all_sites_mch_counts, min(rowSums(core_all_sites_mch_counts))))
# Convert Rarified counts to Pr/Ab:
core_all_sites_mch_counts_prab <- data.frame((core_all_sites_mch_counts_rar > 0)*1)
# Compute NMDS
set.seed(12345); core_all_sites_mch_counts_prab.mds <- metaMDS(core_all_sites_mch_counts_prab, trymax = 200, autotransform = F, wascores = F)
# Making dataframe for plotting
core_all_sites_mch_counts_prab.mds.df <- data.frame(scores(core_all_sites_mch_counts_prab.mds, display = 'sites'))
# Add subject type info
core_all_sites_mch_counts_prab.mds.df$type <- all_site_samples_core$type[match(row.names(core_all_sites_mch_counts_prab.mds.df), all_site_samples_core$samples)]
core_all_sites_mch_counts_prab.mds.df$site <- all_site_samples_core$site[match(row.names(core_all_sites_mch_counts_prab.mds.df), all_site_samples_core$samples)]
# View(core_all_sites_mch_counts_prab.mds.df)
# Permanova
set.seed(12345); (core_all_sites_mch_mds_df.mch.perm <- adonis(formula = core_all_sites_mch_counts_prab ~ core_all_sites_mch_counts_prab.mds.df$type, strata =  core_all_sites_mch_counts_prab.mds.df$site))
# 0.001 ***
set.seed(12345); (core_all_sites_mch_mds_df.site.perm <- adonis(formula = core_all_sites_mch_counts_prab ~ core_all_sites_mch_counts_prab.mds.df$site, strata =  core_all_sites_mch_counts_prab.mds.df$type))
# 0.001 ***
# Plot NMDS
ggplot(core_all_sites_mch_counts_prab.mds.df, aes(x=NMDS1, y=NMDS2)) +
stat_ellipse(aes(color=site), show.legend = F, lwd=0.2) + scale_color_manual(values=c("slateblue", "firebrick2", "forestgreen")) +
geom_point(alpha=0.75, color="black", pch=21, stroke = 0.01, aes(fill=site,  size=type)) + scale_fill_manual(values=c("darkblue", "firebrick4", "forestgreen")) +
labs(fill="Site", size="Subject Type") + scale_size_manual(values=c(2,5)) + theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "cm"), plot.title = element_text(size=15, face="bold", hjust=0.5), plot.subtitle = element_text(color="firebrick4", size=10, hjust=0.5),
axis.text = element_text(size=8, face="bold", color="black"), axis.title = element_text(size=10, face="bold"),  axis.line = element_line(size = 0.2),
legend.title = element_text(size=10, face="bold", hjust=0.5), legend.text = element_text(size = 10), legend.key.size = unit(0.6,"cm"), legend.position="right")
ggsave(file="output/NMDS core sites prabs mch.pdf", width = 10, height = 6, units = "in")
# For Subject Type Analysis
ISR_all_sites_type_dists <- data.frame(betadisper(vegdist(ISR_all_sites_mch_counts_prab), factor(ISR_all_sites_mch_counts_prab.mds.df$type))$distances)
colnames(ISR_all_sites_type_dists) <- "cent_dist"
core_all_sites_type_dists <- data.frame(betadisper(vegdist(core_all_sites_mch_counts_prab), factor(core_all_sites_mch_counts_prab.mds.df$type))$distances)
colnames(core_all_sites_type_dists) <- "cent_dist"
# Make list of common samples in ISR and Core
ISR_all_sites_sample_names <- gsub("_ISR", "", row.names(ISR_all_sites_mch_counts_prab))
# Generate common samples
ISR_core_common_samps <- intersect(ISR_all_sites_sample_names, row.names(core_all_sites_mch_counts_prab))
length(ISR_core_common_samps) # 641
# Make new column
ISR_all_sites_type_dists$samps <- gsub("_ISR", "", row.names(ISR_all_sites_type_dists))
core_all_sites_type_dists$samps <- row.names(core_all_sites_type_dists)
# Subset
ISR_all_sites_type_dists_matched <- ISR_all_sites_type_dists[ISR_all_sites_type_dists$samps %in% ISR_core_common_samps, ]
nrow(ISR_all_sites_type_dists_matched) # 641
# Subset core table
core_all_sites_type_dists_matched <- core_all_sites_type_dists[row.names(core_all_sites_type_dists) %in% ISR_core_common_samps, ]
nrow(core_all_sites_type_dists_matched) # 641
ISR_all_sites_type_dists_matched$core_sub_cent_dists <- core_all_sites_type_dists_matched$cent_dist[match(ISR_all_sites_type_dists_matched$samps, ISR_all_sites_type_dists_matched$samps)]
colnames(ISR_all_sites_type_dists_matched) <- c("Strain Level \nSubject Type Cent. Dists", "Samples", "Species Level \nSubject Type Cent. Dists")
Compare_ISR_core_sub_centdists <- melt(ISR_all_sites_type_dists_matched)
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.5, label.y.npc = 0.9) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
View(Compare_ISR_core_sub_centdists)
unique(Compare_ISR_core_sub_centdists$variable)
wilcox.test(Compare_ISR_core_sub_centdists$value ~ Compare_ISR_core_sub_centdists$variable)
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.5, label.y.npc = 0.9) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.5, label.y.npc = 0.9, label = "p.format") +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.5, label.y.npc = 0.9, label = "p.signif") +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
symnum.args
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.5, label.y.npc = 0.9, label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.5, label.y.npc = 0.9, label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.75, label.y.npc = 0.9, label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.55, label.y.npc = 0.9, label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.65, label.y.npc = 0.9, label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.65, label.y.npc = 0.9, label = "p.signif", size=3,
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.65, label.y.npc = 0.9, label = "p.signif", size=6,
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
# For Subject Type Analysis
ISR_all_sites_site_dists <- data.frame(betadisper(vegdist(ISR_all_sites_mch_counts_prab), factor(ISR_all_sites_mch_counts_prab.mds.df$type))$distances)
colnames(ISR_all_sites_site_dists) <- "cent_dist"
core_all_sites_site_dists <- data.frame(betadisper(vegdist(core_all_sites_mch_counts_prab), factor(core_all_sites_mch_counts_prab.mds.df$type))$distances)
colnames(core_all_sites_site_dists) <- "cent_dist"
# Subset ISR table
# Make new column
ISR_all_sites_site_dists$samps <- gsub("_ISR", "", row.names(ISR_all_sites_site_dists))
core_all_sites_site_dists$samps <- row.names(core_all_sites_site_dists)
# Subset
ISR_all_sites_site_dists_matched <- ISR_all_sites_site_dists[ISR_all_sites_site_dists$samps %in% ISR_core_common_samps, ]
nrow(ISR_all_sites_site_dists_matched) # 641
# Subset core table
core_all_sites_site_dists_matched <- core_all_sites_site_dists[row.names(core_all_sites_site_dists) %in% ISR_core_common_samps, ]
nrow(core_all_sites_site_dists_matched) # 641
# Combine ISR & core data
ISR_all_sites_site_dists_matched$core_sub_cent_dists <- core_all_sites_site_dists_matched$cent_dist[match(ISR_all_sites_site_dists_matched$samps, ISR_all_sites_site_dists_matched$samps)]
colnames(ISR_all_sites_site_dists_matched) <- c("Strain Level \nSampling Site Cent. Dists", "Samples", "Species Level \nSampling Site Cent. Dists")
Compare_ISR_core_site_centdists <- melt(ISR_all_sites_site_dists_matched)
Compare_ISR_core_site_centdists$site <- all_site_samples_core$site[match(Compare_ISR_core_site_centdists$Samples, all_site_samples_core$samples)]
ggplot(Compare_ISR_core_site_centdists, aes(x=variable, y=value)) + facet_wrap(facets = ~site) +
geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.65, label.y.npc = 0.9, label = "p.signif", size=6,
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
# Calculate Centroid Distances
ISR_all_sites_type_dists <- data.frame(betadisper(vegdist(ISR_all_sites_mch_counts_prab), factor(ISR_all_sites_mch_counts_prab.mds.df$type))$distances)
colnames(ISR_all_sites_type_dists) <- "cent_dist"
# Calculate Centroid Distances
core_all_sites_type_dists <- data.frame(betadisper(vegdist(core_all_sites_mch_counts_prab), factor(core_all_sites_mch_counts_prab.mds.df$type))$distances)
colnames(core_all_sites_type_dists) <- "cent_dist"
# Make list of common samples in ISR and Core
ISR_all_sites_sample_names <- gsub("_ISR", "", row.names(ISR_all_sites_mch_counts_prab))
# Generate common samples
ISR_core_common_samps <- intersect(ISR_all_sites_sample_names, row.names(core_all_sites_mch_counts_prab))
length(ISR_core_common_samps) # 641
# Subset ISR table
# Make new column
ISR_all_sites_type_dists$samps <- gsub("_ISR", "", row.names(ISR_all_sites_type_dists))
core_all_sites_type_dists$samps <- row.names(core_all_sites_type_dists)
# Subset
ISR_all_sites_type_dists_matched <- ISR_all_sites_type_dists[ISR_all_sites_type_dists$samps %in% ISR_core_common_samps, ]
nrow(ISR_all_sites_type_dists_matched) # 641
# Subset core table
core_all_sites_type_dists_matched <- core_all_sites_type_dists[row.names(core_all_sites_type_dists) %in% ISR_core_common_samps, ]
nrow(core_all_sites_type_dists_matched) # 641
# Add Core cent dists to ISR cent dists table
ISR_all_sites_type_dists_matched$core_sub_cent_dists <- core_all_sites_type_dists_matched$cent_dist[match(ISR_all_sites_type_dists_matched$samps, ISR_all_sites_type_dists_matched$samps)]
colnames(ISR_all_sites_type_dists_matched) <- c("Strain Level \nSubject Type Cent. Dists", "Samples", "Species Level \nSubject Type Cent. Dists")
# Melt table for plotting
Compare_ISR_core_sub_centdists <- melt(ISR_all_sites_type_dists_matched)
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.65, label.y.npc = 0.9, label = "p.signif", size=6,
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggsave(file="output/Cent Dist Sub Comp.pdf", width = 4, height = 6, units = "in")
# For Subject Type Analysis
ISR_all_sites_site_dists <- data.frame(betadisper(vegdist(ISR_all_sites_mch_counts_prab), factor(ISR_all_sites_mch_counts_prab.mds.df$type))$distances)
colnames(ISR_all_sites_site_dists) <- "cent_dist"
core_all_sites_site_dists <- data.frame(betadisper(vegdist(core_all_sites_mch_counts_prab), factor(core_all_sites_mch_counts_prab.mds.df$type))$distances)
colnames(core_all_sites_site_dists) <- "cent_dist"
# Subset ISR table
# Make new column
ISR_all_sites_site_dists$samps <- gsub("_ISR", "", row.names(ISR_all_sites_site_dists))
core_all_sites_site_dists$samps <- row.names(core_all_sites_site_dists)
# Subset
ISR_all_sites_site_dists_matched <- ISR_all_sites_site_dists[ISR_all_sites_site_dists$samps %in% ISR_core_common_samps, ]
nrow(ISR_all_sites_site_dists_matched) # 641
# Subset core table
core_all_sites_site_dists_matched <- core_all_sites_site_dists[row.names(core_all_sites_site_dists) %in% ISR_core_common_samps, ]
nrow(core_all_sites_site_dists_matched) # 641
# Combine ISR & core data
ISR_all_sites_site_dists_matched$core_sub_cent_dists <- core_all_sites_site_dists_matched$cent_dist[match(ISR_all_sites_site_dists_matched$samps, ISR_all_sites_site_dists_matched$samps)]
colnames(ISR_all_sites_site_dists_matched) <- c("Strain Level \nSampling Site Cent. Dists", "Samples", "Species Level \nSampling Site Cent. Dists")
Compare_ISR_core_site_centdists <- melt(ISR_all_sites_site_dists_matched)
Compare_ISR_core_site_centdists$site <- all_site_samples_core$site[match(Compare_ISR_core_site_centdists$Samples, all_site_samples_core$samples)]
ggplot(Compare_ISR_core_site_centdists, aes(x=variable, y=value)) + facet_wrap(facets = ~site) +
geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.65, label.y.npc = 0.9, label = "p.signif", size=6,
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggsave(file="output/Cent Dist Site Comp.pdf", width = 12, height = 6, units = "in")
ggplot(Compare_ISR_core_sub_centdists, aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable), lwd=0.2, alpha=0.9, outlier.size = 0.2,  width=0.5) +
scale_fill_manual(values = c("darkred", "darkgreen")) +
stat_compare_means(paired = TRUE, label.x.npc = 0.65, label.y.npc = 0.9, label = "p.signif", size=6,
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05), symbols = c("***", "**", "*", "ns"))) +
scale_y_continuous(breaks=c(0.2, 0.4, 0.6, 0.8), limits = c(0.1,0.9), expand = c(0,0)) +
annotate(x=0.4, xend=0.4, y=0.2, yend=0.8, lwd=0.3, geom="segment") +
labs(x = "", y = "     Centroid Distances (Bray-Curtis)") + theme_classic() +
theme(plot.title = element_blank(),
axis.text.x = element_text(size=9, face="bold", color="black", hjust = 0.5), axis.line.x = element_line(size = 0.2),
axis.text.y = element_text(size=9, face="bold", color="black"), axis.title.y = element_text(size=12, face="bold", color="black", margin = margin(r=10), hjust = 0.35),
axis.line.y = element_blank(),
plot.margin = unit(c(0.1,0,0,0), "cm"), legend.position = "none")
ggsave(file="output/Cent Dist Sub Comp.pdf", width = 4, height = 5, units = "in")
# Create table for all core samples sequenced
all_site_samples_core <- data.frame(row.names(AD_core_counts))
colnames(all_site_samples_core) <- "samples"
all_site_samples_core$sample <- all_site_samples_core$samples
all_site_samples_core$sample <- gsub("_P1", "", all_site_samples_core$sample)
all_site_samples_core$sample <- gsub("_P2", "", all_site_samples_core$sample)
all_site_samples_core$sample <- gsub("_S", "", all_site_samples_core$sample)
# Add subject info
all_site_samples_core$type <- AD_clinical_meta_2019_ISR$type[match(all_site_samples_core$sample, AD_clinical_meta_2019_ISR$sample)]
# Add site info
all_site_samples_core$site <- as.character(all_site_samples_core$samples)
all_site_samples_core$site[grepl("P1", all_site_samples_core$site)] <- "Supragingival Plaque"
all_site_samples_core$site[grepl("P2", all_site_samples_core$site)] <- "Subgingival Plaque"
all_site_samples_core$site[grepl("_S", all_site_samples_core$site)] <- "Soft Tissue/Saliva Swab"
# Subset for mother and child only
all_site_samples_core_mch <- all_site_samples_core[all_site_samples_core$type == "Mother" | all_site_samples_core$type == "Child", ]
nrow(all_site_samples_core_mch) # 645
# Subset counts
core_all_sites_mch_counts <- AD_core_counts[row.names(AD_core_counts) %in% all_site_samples_core_mch$samples, ]
core_all_sites_mch_counts <- core_all_sites_mch_counts[,colSums(core_all_sites_mch_counts) > 0]
dim(core_all_sites_mch_counts) # 645 580
# Rarefy counts
set.seed(12345); core_all_sites_mch_counts_rar <- as.data.frame(rrarefy(core_all_sites_mch_counts, min(rowSums(core_all_sites_mch_counts))))
# Convert Rarified counts to Pr/Ab:
core_all_sites_mch_counts_prab <- data.frame((core_all_sites_mch_counts_rar > 0)*1)
# Compute NMDS
set.seed(12345); core_all_sites_mch_counts_prab.mds <- metaMDS(core_all_sites_mch_counts_prab, trymax = 200, autotransform = F, wascores = F)
# Compute NMDS
set.seed(12345); core_all_sites_mch_counts_prab.mds <- metaMDS(core_all_sites_mch_counts_prab, trymax = 10, autotransform = F, wascores = F)
```{r, results=FALSE, eval=TRUE}
# Compute NMDS
set.seed(12345); core_all_sites_mch_counts_prab.mds <- metaMDS(core_all_sites_mch_counts_prab, trymax = 3, autotransform = F, wascores = F)
# Compute NMDS
set.seed(12345); test.mds <- metaMDS(core_all_sites_mch_counts_prab[c(1:20), c(1:20)], trymax = 10, autotransform = F, wascores = F)
# Compute NMDS
set.seed(12345); test.mds <- metaMDS(core_all_sites_mch_counts_prab[c(1:20), c(1:20)], trymax = 10, autotransform = F, wascores = F)
# Compute NMDS
set.seed(12345); test.mds <- metaMDS(core_all_sites_mch_counts_prab[c(1:20), c(1:20)], trymax = 10, autotransform = F, wascores = F)
set.seed(12345)
install.packages("stargazer")
setwd("~/Box Sync/Manuscripts/ISR Manuscript 2018/ISR_ms_git/ISR_manuscript")
